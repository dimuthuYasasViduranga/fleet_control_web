FROM elixir:1.13 as builder

# configure environment
RUN apt-get update && apt-get install -y git build-essential ca-certificates curl
RUN mix local.hex --force
RUN mix local.rebar --force

WORKDIR /builder

ARG app_version="Not specified"

ENV MIX_ENV=prod 
LABEL version=${app_version} org="Haultrax" application="fleet-control-ui"
RUN git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"

# setup ssh
RUN mkdir -p -m 0700 ~/.ssh
RUN ssh-keyscan github.com >> ~/.ssh/known_hosts

# install dependencies 
COPY phx/mix.exs mix.exs
RUN --mount=type=ssh MIX_ENV=prod mix deps.get
RUN MIX_ENV=prod mix deps.compile

# copy config 
COPY phx/config/prod.exs config/prod.exs
COPY phx/config/releases.exs config/releases.exs
COPY phx/config/config.exs config/config.exs

# copy source code
COPY phx/priv priv
COPY phx/lib lib

# check vue and compile app
RUN ls -s priv/static/main
RUN MIX_ENV=prod mix phx.digest -o priv/static
RUN MIX_ENV=prod mix release

###############
### Release ###
###############
FROM debian:bullseye

ARG app_version="Not specified"
ENV GIT_VERSION=$app_version

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install erlang-tools erlang-xmerl bash openssl locales -y
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen en_US.UTF-8 && \
    dpkg-reconfigure locales && \
    /usr/sbin/update-locale LANG=en_US.UTF-8
ENV LC_ALL en_US.UTF-8

ENV MIX_ENV=prod \
    REPLACE_OS_VARS=true \
    SHELL=/bin/bash \
    LANG=en_US.UTF-8 \
    LC_CTYPE="en_US.UTF-8"

## Install App 
WORKDIR /release
COPY --from=builder /builder/_build/prod/rel/fleet_control_web .

## check appsignal
RUN ls -s lib/appsignal*/priv/appsignal_extension.so

## RUN
RUN chown -R nobody: .
USER nobody
CMD ["bin/fleet-control_web", "start"]